#!/usr/bin/env bash
# ==========================================================
# Batch builder for SPARROT analysis scripts
# ==========================================================
# This script auto-generates an R script for each spatial dataset.
# Each generated R script:
#   1. Loads Tangram results (adata_st, ad_ge, predicted probs)
#   2. Builds a SparrotObj via createSparrotObj()
#   3. Computes pairwise cell-type overlaps (MCC metric)
#   4. Saves both overlap and SparrotObj to output directory
#
# All file paths are relative and safe for public release.

set -e  # stop on first error

# ----------------------------------------------------------
# Define spatial sample list
# ----------------------------------------------------------
SPATIAL_FILES=(
  # ---- PUMCH cohort ----
  "PUMCH_1" "PUMCH_2" "PUMCH_3" "PUMCH_4" "PUMCH_5" "PUMCH_6" "PUMCH_7" "PUMCH_8" "PUMCH_9" "PUMCH_10"
  "PUMCH_11" "PUMCH_12" "PUMCH_13" "PUMCH_14_1" "PUMCH_14_2" "PUMCH_15"

  # ---- HTAN WUSTL cohort ----
  "HTA12_22_4" "HTA12_23_3" "HTA12_24_5" "HTA12_24_6" "HTA12_25_5" "HTA12_25_6"
  "HTA12_25_7" "HTA12_25_8" "HTA12_26_5" "HTA12_26_6" "HTA12_27_5" "HTA12_28_5"
  "HTA12_29_3" "HTA12_30_3" "HTA12_31_3"

  # ---- GSE274103 (10X Visium) ----
  "GSM8443449_PDAC-p1" "GSM8443450_PDAC-p2" "GSM8443451_PDAC-p3" "GSM8443452_PDAC-p4" "GSM8443453_PDAC-p5"

  # ---- GSE274557 (10X Visium) ----
  "GSM8452847_Pt-1A" "GSM8452850_Pt-2A" "GSM8452853_Pt-3A" "GSM8452856_Pt-4A" "GSM8452860_Pt-5A"
  "GSM8452863_Pt-6A" "GSM8452867_Pt-7A" "GSM8452871_Pt-8A" "GSM8452875_Pt-9A" "GSM8452879_Pt-10A"
  "GSM8452883_Pt-11A" "GSM8452887_Pt-12A" "GSM8452891_Pt-13A" "GSM8714177_Pt3_Pri2" "GSM8714178_Pt6_Pri2"
  "GSM8714179_Pt6_Pri3" "GSM8714180_Pt8_Pri2" "GSM8714181_Pt13_Pri2" "GSM8714182_Pt13_Pri3"

  # ---- GSE274665 (10X Visium) ----
  "GSM8454387_PDAC1" "GSM8454388_PDAC2" "GSM8454389_PDAC3" "GSM8454390_PDAC4"
)

# ----------------------------------------------------------
# Directory placeholders (edit as needed)
# ----------------------------------------------------------
REF_DIR="./Tangram_bin100/ref_level3"
OUT_DIR="./Tangram_bin100/ref_level3_sparrot"

mkdir -p "$OUT_DIR"

# ----------------------------------------------------------
# Loop over each dataset and create R script
# ----------------------------------------------------------
for sample in "${SPATIAL_FILES[@]}"; do
  # Remove any special characters that may cause invalid file names
  safe_name=$(echo "$sample" | tr -cd '[:alnum:]_-')
  script="SPAR_${safe_name}.R"

  echo "[INFO] Creating ${script} ..."

  cat > "$script" << EOF
# ==========================================================
# SPARROT post-Tangram analysis script
# ==========================================================
# Auto-generated by generate_sparrot_scripts.sh
#
# Steps:
#   1. Load Tangram results (adata_st, ad_ge, predictions)
#   2. Construct a SparrotObj
#   3. Compute pairwise cell-type overlaps (MCC metric)
#   4. Save outputs in standardized format

library(SPARROT)
library(Seurat)
library(ggplot2)

# ---- Define relative paths (edit if needed)
ref_dir <- file.path("${REF_DIR}", "${sample}")
out_dir <- "${OUT_DIR}"

# ---- Load Tangram outputs
adata_st <- readRDS(file.path(ref_dir, "adata_st_clustersmodeL1.rds"))
ad_ge    <- readRDS(file.path(ref_dir, "ad_ge_clustersmodeL1.rds"))
ad_ge@reductions[["pixel"]] <- adata_st@reductions[["pixel"]]

# ---- Extract coordinates and predicted probabilities
coords <- Embeddings(adata_st, "pixel")
prob_mat <- read.csv(file.path(ref_dir, "tangram_ct_predL1.csv"), row.names = 1)

# ---- Create Sparrot object
cc <- createSparrotObj(
  coords     = coords,
  expr       = GetAssayData(object = ad_ge, assay = "RNA", slot = "counts"),
  cell_prob  = prob_mat
)

# ---- Compute pairwise overlap (MCC metric, parallelized)
pm <- computePairwiseCelltypeOverlap(cc, metric = "mcc", ncore = 40)

# ---- Save outputs
saveRDS(pm, file.path(out_dir, paste0("Coloc_", "${sample}", ".rds")))
saveRDS(cc, file.path(out_dir, paste0("SparObj_", "${sample}", ".rds")))

cat("[DONE] SPARROT analysis completed for ${sample}\\n")
EOF

done

echo "[INFO] All R scripts generated successfully in current directory."
